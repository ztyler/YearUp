/*
 * Anatomy of a Java Class. The comments here will describe the 
 * basic components of a Java class and some other fundamental 
 * concepts of Java. 
 */

/*
 * This is a comment; comments are just to help you and others read and understand
 * your code. They are ignored by the computer. It is good practice to put plenty of comments in
 * your code to help others understand your code. 
 */

// This is another style of comment in Java; this style is best used for single line comments

// below is a Class named Car
public class Car {
	// at the beginning of every class there are typically 
	// attributes (also called member variables) 
	// this class has four attributes: _model, _color, _numberOfCyclinders, _isHybrid
	// 
	/* 
	 * the first attribute below is the _model of the Car. Note it is defaulted to null. If not set to
	 * null, it would still be null but we set it to null for clarity
	 * 
	 * Note that all member variables below begin with the "_" underscore character; this is so 
	 * they can easily be identified as member variables or attributes of the class
	 */
	String _model = null; 
	/*
	 * the next attribute is the _color of the car which is defaulted to "black"; 
	 * Henry Ford once said "you can have any color car you want as long as it is black"
	 */
	String _color = "black";
	
	int _numberOfCylinders = 6; // the default value for this integer member variable is 6
	
	/*
	 * below is a member variable of type 'boolean'. booleans can only have one of two values: true of false
	 */
	boolean _isHybrid = false; // by default, all new Cars we create will not be hybrids
	
	/*
	 * after defining the class attributes, the next step is typically to define any Constructors
	 * Constructors are special methods that create objects of the class
	 * Constructors have the same name as the class and like a class always begin with a capitol letter
	 * Below is a constructor that just takes the model of the car
	 */
	public Car (String model)
	{
		/*
		 * below we set the attribute _model equal to the value passed in for "model"
		 * 
		 * Note that since we didn't pass in values for color, numberOfCylinders or hybrid, the objects created
		 * with this constructor will initially have the default values for those variable as assigned
		 * above
		 */
		_model = model;
	}
	
	/*
	 * here is another constructor that takes the model and the color
	 */
	public Car (String model, String color)
	{
		_model = model;
		_color = color;
	}
	
	// one more constructor that takes in four parameters for each of the class attributes
	public Car (String model, String color, int numCylinders, boolean isHybrid)
	{
		_model = model;
		_color = color;
		_numberOfCylinders = numCylinders;
		_isHybrid = isHybrid;
	}
	
	/*
	 * after the constructors you will typically have the Class methods
	 */
	
	// this is a simple method that just returns the color of the car. It is also referred to as a "getter" since its
	// just getting one of the attributes
	public String getColor ()
	{
		return _color;
	}
	
	// this is a setter method that simply sets the value of the color attribute. Is is called a "setter" 
	public void setColor (String color)
	{
		_color = color;
	}
	
	// this method returns the string "Yes" if the car is a hybrid; otherwise it returns "No"
	public String isThisCarAHybrid()
	{
		String result = null;
		if (_isHybrid)
		{
			result = "Yes";
		}
		else
		{
			result = "No"; 
		}
		
		return (result);
	}
	
	// this is a method that just returns a String that describes the Car object 
	public String toString()
	{
		return ("This car is a " + _model + ", it's color is " + _color + ", and it has " + _numberOfCylinders + " cylinders");
		
	}
	
	/*
	 * below is the main method; this is a very important method that is the ENTRY point to any
	 * Java program. There is only ONE main method and it is the first thing that will run and is 
	 * typically embedded in the initial class for your program. In this case the class 'Car'
	 * Note that it must always have the method signature as such:
	 * public static void main (String[] args)
	 * 
	 * Your program will begin doing stuff here at the begining of the main method
	 */
	public static void main (String[] args) 
	{
		// below we use the System.out.println command to print out some instructions to the console
		// this is very helpful to see what your program is doing and help fix any bugs you may have
		System.out.println ("My Car program is starting...");
		
		// below I create an object called myCar using the Constructor that just takes one parameter which
		// is the model of the car
		Car myFirstCar = new Car ("Porsche 911 Turbo S");
	
		// below we use System.out.println in combination with the Car objects toString method 
		// to print out information about this particular car
		System.out.println (myFirstCar.toString());
		
		// below I create an object called myCar using the Constructor that just takes one parameter which
		// is the model of the car. I then set the color of the car to "Light Blue"
		Car mySecondCar = new Car ("BMW 335i");
		mySecondCar._color = "Light Blue";
		System.out.println (mySecondCar.toString());
		
		// below I create a third car that uses the constructor that takes in 4 parameters and sets
		// all of the cars attributes
		Car myThirdCar = new Car ("Chevy Corvette Stingray", "Red", 8, false);
		System.out.println (myThirdCar.toString());
		
		// call the isThisCarAHybrid method and print out the results
		System.out.println ("Is this car a hybrid? " + myThirdCar.isThisCarAHybrid());
		
		// just Red is boring so lets change this cars color to something a bit more exciting 
		// using the color setter method
		// note that once you have an object, you call a method on the object using the "." followed by the method name
		myThirdCar.setColor ("Fiery Volcano Red");
		
		// use the car's getColor method instead of the instance variable directly to figure out the color
		System.out.println ("My third car's color is now " + myThirdCar.getColor());
		
		// above we changed the color of myThirdCar to FieryVolcanoRed, but the color of myFirstCar should be the same
		// as it was before since we never changed it; in fact it should be the default color since we never set it
		// after creating it with the constructor
		System.out.println ("My first car's color is still  " + myFirstCar.getColor());
		
		// program is ending, say good bye!
		System.out.println ("This program is over, happy coding and peace out!");
				
	} // this is the end of the main method

} // this is the end of the Car class